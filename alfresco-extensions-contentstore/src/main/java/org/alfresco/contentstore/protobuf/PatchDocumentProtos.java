/*
 * Copyright 2016 Alfresco Software, Ltd.  All rights reserved.
 *
 * License rights for this program may be obtained from Alfresco Software, Ltd. 
 * pursuant to a written agreement and any use of this program without such an 
 * agreement is prohibited. 
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: patch.proto

package org.alfresco.contentstore.protobuf;

public final class PatchDocumentProtos {
  private PatchDocumentProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface PatchDocumentOrBuilder extends
      // @@protoc_insertion_point(interface_extends:org.alfresco.contentstore.protobuf.PatchDocument)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 block_size = 1;</code>
     */
    boolean hasBlockSize();
    /**
     * <code>required int32 block_size = 1;</code>
     */
    int getBlockSize();

    /**
     * <code>required string node_id = 2;</code>
     */
    boolean hasNodeId();
    /**
     * <code>required string node_id = 2;</code>
     */
    java.lang.String getNodeId();
    /**
     * <code>required string node_id = 2;</code>
     */
    com.google.protobuf.ByteString
        getNodeIdBytes();

    /**
     * <code>repeated int32 matched_blocks = 3;</code>
     */
    java.util.List<java.lang.Integer> getMatchedBlocksList();
    /**
     * <code>repeated int32 matched_blocks = 3;</code>
     */
    int getMatchedBlocksCount();
    /**
     * <code>repeated int32 matched_blocks = 3;</code>
     */
    int getMatchedBlocks(int index);

    /**
     * <code>repeated .org.alfresco.contentstore.protobuf.PatchDocument.Patch patches = 4;</code>
     */
    java.util.List<org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.Patch> 
        getPatchesList();
    /**
     * <code>repeated .org.alfresco.contentstore.protobuf.PatchDocument.Patch patches = 4;</code>
     */
    org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.Patch getPatches(int index);
    /**
     * <code>repeated .org.alfresco.contentstore.protobuf.PatchDocument.Patch patches = 4;</code>
     */
    int getPatchesCount();
    /**
     * <code>repeated .org.alfresco.contentstore.protobuf.PatchDocument.Patch patches = 4;</code>
     */
    java.util.List<? extends org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.PatchOrBuilder> 
        getPatchesOrBuilderList();
    /**
     * <code>repeated .org.alfresco.contentstore.protobuf.PatchDocument.Patch patches = 4;</code>
     */
    org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.PatchOrBuilder getPatchesOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code org.alfresco.contentstore.protobuf.PatchDocument}
   */
  public static final class PatchDocument extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:org.alfresco.contentstore.protobuf.PatchDocument)
      PatchDocumentOrBuilder {
    // Use PatchDocument.newBuilder() to construct.
    private PatchDocument(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PatchDocument(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PatchDocument defaultInstance;
    public static PatchDocument getDefaultInstance() {
      return defaultInstance;
    }

    public PatchDocument getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PatchDocument(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              blockSize_ = input.readInt32();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              nodeId_ = bs;
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                matchedBlocks_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              matchedBlocks_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                matchedBlocks_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                matchedBlocks_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                patches_ = new java.util.ArrayList<org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.Patch>();
                mutable_bitField0_ |= 0x00000008;
              }
              patches_.add(input.readMessage(org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.Patch.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          matchedBlocks_ = java.util.Collections.unmodifiableList(matchedBlocks_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          patches_ = java.util.Collections.unmodifiableList(patches_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.alfresco.contentstore.protobuf.PatchDocumentProtos.internal_static_org_alfresco_contentstore_protobuf_PatchDocument_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.alfresco.contentstore.protobuf.PatchDocumentProtos.internal_static_org_alfresco_contentstore_protobuf_PatchDocument_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.class, org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.Builder.class);
    }

    public static com.google.protobuf.Parser<PatchDocument> PARSER =
        new com.google.protobuf.AbstractParser<PatchDocument>() {
      public PatchDocument parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PatchDocument(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PatchDocument> getParserForType() {
      return PARSER;
    }

    public interface PatchOrBuilder extends
        // @@protoc_insertion_point(interface_extends:org.alfresco.contentstore.protobuf.PatchDocument.Patch)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>required int32 last_match_index = 1;</code>
       */
      boolean hasLastMatchIndex();
      /**
       * <code>required int32 last_match_index = 1;</code>
       */
      int getLastMatchIndex();

      /**
       * <code>required int32 size = 2;</code>
       */
      boolean hasSize();
      /**
       * <code>required int32 size = 2;</code>
       */
      int getSize();

      /**
       * <code>required bytes buffer = 3;</code>
       */
      boolean hasBuffer();
      /**
       * <code>required bytes buffer = 3;</code>
       */
      com.google.protobuf.ByteString getBuffer();
    }
    /**
     * Protobuf type {@code org.alfresco.contentstore.protobuf.PatchDocument.Patch}
     */
    public static final class Patch extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:org.alfresco.contentstore.protobuf.PatchDocument.Patch)
        PatchOrBuilder {
      // Use Patch.newBuilder() to construct.
      private Patch(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Patch(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Patch defaultInstance;
      public static Patch getDefaultInstance() {
        return defaultInstance;
      }

      public Patch getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Patch(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                lastMatchIndex_ = input.readInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                size_ = input.readInt32();
                break;
              }
              case 26: {
                bitField0_ |= 0x00000004;
                buffer_ = input.readBytes();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.alfresco.contentstore.protobuf.PatchDocumentProtos.internal_static_org_alfresco_contentstore_protobuf_PatchDocument_Patch_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.alfresco.contentstore.protobuf.PatchDocumentProtos.internal_static_org_alfresco_contentstore_protobuf_PatchDocument_Patch_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.Patch.class, org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.Patch.Builder.class);
      }

      public static com.google.protobuf.Parser<Patch> PARSER =
          new com.google.protobuf.AbstractParser<Patch>() {
        public Patch parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Patch(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Patch> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int LAST_MATCH_INDEX_FIELD_NUMBER = 1;
      private int lastMatchIndex_;
      /**
       * <code>required int32 last_match_index = 1;</code>
       */
      public boolean hasLastMatchIndex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 last_match_index = 1;</code>
       */
      public int getLastMatchIndex() {
        return lastMatchIndex_;
      }

      public static final int SIZE_FIELD_NUMBER = 2;
      private int size_;
      /**
       * <code>required int32 size = 2;</code>
       */
      public boolean hasSize() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 size = 2;</code>
       */
      public int getSize() {
        return size_;
      }

      public static final int BUFFER_FIELD_NUMBER = 3;
      private com.google.protobuf.ByteString buffer_;
      /**
       * <code>required bytes buffer = 3;</code>
       */
      public boolean hasBuffer() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required bytes buffer = 3;</code>
       */
      public com.google.protobuf.ByteString getBuffer() {
        return buffer_;
      }

      private void initFields() {
        lastMatchIndex_ = 0;
        size_ = 0;
        buffer_ = com.google.protobuf.ByteString.EMPTY;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasLastMatchIndex()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasSize()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasBuffer()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, lastMatchIndex_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeInt32(2, size_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBytes(3, buffer_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, lastMatchIndex_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, size_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(3, buffer_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.Patch parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.Patch parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.Patch parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.Patch parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.Patch parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.Patch parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.Patch parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.Patch parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.Patch parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.Patch parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.Patch prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code org.alfresco.contentstore.protobuf.PatchDocument.Patch}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:org.alfresco.contentstore.protobuf.PatchDocument.Patch)
          org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.PatchOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return org.alfresco.contentstore.protobuf.PatchDocumentProtos.internal_static_org_alfresco_contentstore_protobuf_PatchDocument_Patch_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return org.alfresco.contentstore.protobuf.PatchDocumentProtos.internal_static_org_alfresco_contentstore_protobuf_PatchDocument_Patch_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.Patch.class, org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.Patch.Builder.class);
        }

        // Construct using org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.Patch.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          lastMatchIndex_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          size_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          buffer_ = com.google.protobuf.ByteString.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return org.alfresco.contentstore.protobuf.PatchDocumentProtos.internal_static_org_alfresco_contentstore_protobuf_PatchDocument_Patch_descriptor;
        }

        public org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.Patch getDefaultInstanceForType() {
          return org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.Patch.getDefaultInstance();
        }

        public org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.Patch build() {
          org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.Patch result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.Patch buildPartial() {
          org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.Patch result = new org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.Patch(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.lastMatchIndex_ = lastMatchIndex_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.size_ = size_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.buffer_ = buffer_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.Patch) {
            return mergeFrom((org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.Patch)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.Patch other) {
          if (other == org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.Patch.getDefaultInstance()) return this;
          if (other.hasLastMatchIndex()) {
            setLastMatchIndex(other.getLastMatchIndex());
          }
          if (other.hasSize()) {
            setSize(other.getSize());
          }
          if (other.hasBuffer()) {
            setBuffer(other.getBuffer());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasLastMatchIndex()) {
            
            return false;
          }
          if (!hasSize()) {
            
            return false;
          }
          if (!hasBuffer()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.Patch parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.Patch) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int lastMatchIndex_ ;
        /**
         * <code>required int32 last_match_index = 1;</code>
         */
        public boolean hasLastMatchIndex() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required int32 last_match_index = 1;</code>
         */
        public int getLastMatchIndex() {
          return lastMatchIndex_;
        }
        /**
         * <code>required int32 last_match_index = 1;</code>
         */
        public Builder setLastMatchIndex(int value) {
          bitField0_ |= 0x00000001;
          lastMatchIndex_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 last_match_index = 1;</code>
         */
        public Builder clearLastMatchIndex() {
          bitField0_ = (bitField0_ & ~0x00000001);
          lastMatchIndex_ = 0;
          onChanged();
          return this;
        }

        private int size_ ;
        /**
         * <code>required int32 size = 2;</code>
         */
        public boolean hasSize() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required int32 size = 2;</code>
         */
        public int getSize() {
          return size_;
        }
        /**
         * <code>required int32 size = 2;</code>
         */
        public Builder setSize(int value) {
          bitField0_ |= 0x00000002;
          size_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required int32 size = 2;</code>
         */
        public Builder clearSize() {
          bitField0_ = (bitField0_ & ~0x00000002);
          size_ = 0;
          onChanged();
          return this;
        }

        private com.google.protobuf.ByteString buffer_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <code>required bytes buffer = 3;</code>
         */
        public boolean hasBuffer() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required bytes buffer = 3;</code>
         */
        public com.google.protobuf.ByteString getBuffer() {
          return buffer_;
        }
        /**
         * <code>required bytes buffer = 3;</code>
         */
        public Builder setBuffer(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          buffer_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required bytes buffer = 3;</code>
         */
        public Builder clearBuffer() {
          bitField0_ = (bitField0_ & ~0x00000004);
          buffer_ = getDefaultInstance().getBuffer();
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:org.alfresco.contentstore.protobuf.PatchDocument.Patch)
      }

      static {
        defaultInstance = new Patch(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:org.alfresco.contentstore.protobuf.PatchDocument.Patch)
    }

    private int bitField0_;
    public static final int BLOCK_SIZE_FIELD_NUMBER = 1;
    private int blockSize_;
    /**
     * <code>required int32 block_size = 1;</code>
     */
    public boolean hasBlockSize() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 block_size = 1;</code>
     */
    public int getBlockSize() {
      return blockSize_;
    }

    public static final int NODE_ID_FIELD_NUMBER = 2;
    private java.lang.Object nodeId_;
    /**
     * <code>required string node_id = 2;</code>
     */
    public boolean hasNodeId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string node_id = 2;</code>
     */
    public java.lang.String getNodeId() {
      java.lang.Object ref = nodeId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          nodeId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string node_id = 2;</code>
     */
    public com.google.protobuf.ByteString
        getNodeIdBytes() {
      java.lang.Object ref = nodeId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nodeId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MATCHED_BLOCKS_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> matchedBlocks_;
    /**
     * <code>repeated int32 matched_blocks = 3;</code>
     */
    public java.util.List<java.lang.Integer>
        getMatchedBlocksList() {
      return matchedBlocks_;
    }
    /**
     * <code>repeated int32 matched_blocks = 3;</code>
     */
    public int getMatchedBlocksCount() {
      return matchedBlocks_.size();
    }
    /**
     * <code>repeated int32 matched_blocks = 3;</code>
     */
    public int getMatchedBlocks(int index) {
      return matchedBlocks_.get(index);
    }

    public static final int PATCHES_FIELD_NUMBER = 4;
    private java.util.List<org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.Patch> patches_;
    /**
     * <code>repeated .org.alfresco.contentstore.protobuf.PatchDocument.Patch patches = 4;</code>
     */
    public java.util.List<org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.Patch> getPatchesList() {
      return patches_;
    }
    /**
     * <code>repeated .org.alfresco.contentstore.protobuf.PatchDocument.Patch patches = 4;</code>
     */
    public java.util.List<? extends org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.PatchOrBuilder> 
        getPatchesOrBuilderList() {
      return patches_;
    }
    /**
     * <code>repeated .org.alfresco.contentstore.protobuf.PatchDocument.Patch patches = 4;</code>
     */
    public int getPatchesCount() {
      return patches_.size();
    }
    /**
     * <code>repeated .org.alfresco.contentstore.protobuf.PatchDocument.Patch patches = 4;</code>
     */
    public org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.Patch getPatches(int index) {
      return patches_.get(index);
    }
    /**
     * <code>repeated .org.alfresco.contentstore.protobuf.PatchDocument.Patch patches = 4;</code>
     */
    public org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.PatchOrBuilder getPatchesOrBuilder(
        int index) {
      return patches_.get(index);
    }

    private void initFields() {
      blockSize_ = 0;
      nodeId_ = "";
      matchedBlocks_ = java.util.Collections.emptyList();
      patches_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasBlockSize()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNodeId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getPatchesCount(); i++) {
        if (!getPatches(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, blockSize_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNodeIdBytes());
      }
      for (int i = 0; i < matchedBlocks_.size(); i++) {
        output.writeInt32(3, matchedBlocks_.get(i));
      }
      for (int i = 0; i < patches_.size(); i++) {
        output.writeMessage(4, patches_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, blockSize_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNodeIdBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < matchedBlocks_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(matchedBlocks_.get(i));
        }
        size += dataSize;
        size += 1 * getMatchedBlocksList().size();
      }
      for (int i = 0; i < patches_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, patches_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code org.alfresco.contentstore.protobuf.PatchDocument}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:org.alfresco.contentstore.protobuf.PatchDocument)
        org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocumentOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.alfresco.contentstore.protobuf.PatchDocumentProtos.internal_static_org_alfresco_contentstore_protobuf_PatchDocument_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.alfresco.contentstore.protobuf.PatchDocumentProtos.internal_static_org_alfresco_contentstore_protobuf_PatchDocument_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.class, org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.Builder.class);
      }

      // Construct using org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPatchesFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        blockSize_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        nodeId_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        matchedBlocks_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        if (patchesBuilder_ == null) {
          patches_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          patchesBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.alfresco.contentstore.protobuf.PatchDocumentProtos.internal_static_org_alfresco_contentstore_protobuf_PatchDocument_descriptor;
      }

      public org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument getDefaultInstanceForType() {
        return org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.getDefaultInstance();
      }

      public org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument build() {
        org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument buildPartial() {
        org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument result = new org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.blockSize_ = blockSize_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.nodeId_ = nodeId_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          matchedBlocks_ = java.util.Collections.unmodifiableList(matchedBlocks_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.matchedBlocks_ = matchedBlocks_;
        if (patchesBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            patches_ = java.util.Collections.unmodifiableList(patches_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.patches_ = patches_;
        } else {
          result.patches_ = patchesBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument) {
          return mergeFrom((org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument other) {
        if (other == org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.getDefaultInstance()) return this;
        if (other.hasBlockSize()) {
          setBlockSize(other.getBlockSize());
        }
        if (other.hasNodeId()) {
          bitField0_ |= 0x00000002;
          nodeId_ = other.nodeId_;
          onChanged();
        }
        if (!other.matchedBlocks_.isEmpty()) {
          if (matchedBlocks_.isEmpty()) {
            matchedBlocks_ = other.matchedBlocks_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureMatchedBlocksIsMutable();
            matchedBlocks_.addAll(other.matchedBlocks_);
          }
          onChanged();
        }
        if (patchesBuilder_ == null) {
          if (!other.patches_.isEmpty()) {
            if (patches_.isEmpty()) {
              patches_ = other.patches_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensurePatchesIsMutable();
              patches_.addAll(other.patches_);
            }
            onChanged();
          }
        } else {
          if (!other.patches_.isEmpty()) {
            if (patchesBuilder_.isEmpty()) {
              patchesBuilder_.dispose();
              patchesBuilder_ = null;
              patches_ = other.patches_;
              bitField0_ = (bitField0_ & ~0x00000008);
              patchesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPatchesFieldBuilder() : null;
            } else {
              patchesBuilder_.addAllMessages(other.patches_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasBlockSize()) {
          
          return false;
        }
        if (!hasNodeId()) {
          
          return false;
        }
        for (int i = 0; i < getPatchesCount(); i++) {
          if (!getPatches(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int blockSize_ ;
      /**
       * <code>required int32 block_size = 1;</code>
       */
      public boolean hasBlockSize() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 block_size = 1;</code>
       */
      public int getBlockSize() {
        return blockSize_;
      }
      /**
       * <code>required int32 block_size = 1;</code>
       */
      public Builder setBlockSize(int value) {
        bitField0_ |= 0x00000001;
        blockSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 block_size = 1;</code>
       */
      public Builder clearBlockSize() {
        bitField0_ = (bitField0_ & ~0x00000001);
        blockSize_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object nodeId_ = "";
      /**
       * <code>required string node_id = 2;</code>
       */
      public boolean hasNodeId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string node_id = 2;</code>
       */
      public java.lang.String getNodeId() {
        java.lang.Object ref = nodeId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            nodeId_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string node_id = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNodeIdBytes() {
        java.lang.Object ref = nodeId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          nodeId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string node_id = 2;</code>
       */
      public Builder setNodeId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        nodeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string node_id = 2;</code>
       */
      public Builder clearNodeId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        nodeId_ = getDefaultInstance().getNodeId();
        onChanged();
        return this;
      }
      /**
       * <code>required string node_id = 2;</code>
       */
      public Builder setNodeIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        nodeId_ = value;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> matchedBlocks_ = java.util.Collections.emptyList();
      private void ensureMatchedBlocksIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          matchedBlocks_ = new java.util.ArrayList<java.lang.Integer>(matchedBlocks_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 matched_blocks = 3;</code>
       */
      public java.util.List<java.lang.Integer>
          getMatchedBlocksList() {
        return java.util.Collections.unmodifiableList(matchedBlocks_);
      }
      /**
       * <code>repeated int32 matched_blocks = 3;</code>
       */
      public int getMatchedBlocksCount() {
        return matchedBlocks_.size();
      }
      /**
       * <code>repeated int32 matched_blocks = 3;</code>
       */
      public int getMatchedBlocks(int index) {
        return matchedBlocks_.get(index);
      }
      /**
       * <code>repeated int32 matched_blocks = 3;</code>
       */
      public Builder setMatchedBlocks(
          int index, int value) {
        ensureMatchedBlocksIsMutable();
        matchedBlocks_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 matched_blocks = 3;</code>
       */
      public Builder addMatchedBlocks(int value) {
        ensureMatchedBlocksIsMutable();
        matchedBlocks_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 matched_blocks = 3;</code>
       */
      public Builder addAllMatchedBlocks(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureMatchedBlocksIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, matchedBlocks_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 matched_blocks = 3;</code>
       */
      public Builder clearMatchedBlocks() {
        matchedBlocks_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private java.util.List<org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.Patch> patches_ =
        java.util.Collections.emptyList();
      private void ensurePatchesIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          patches_ = new java.util.ArrayList<org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.Patch>(patches_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.Patch, org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.Patch.Builder, org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.PatchOrBuilder> patchesBuilder_;

      /**
       * <code>repeated .org.alfresco.contentstore.protobuf.PatchDocument.Patch patches = 4;</code>
       */
      public java.util.List<org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.Patch> getPatchesList() {
        if (patchesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(patches_);
        } else {
          return patchesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .org.alfresco.contentstore.protobuf.PatchDocument.Patch patches = 4;</code>
       */
      public int getPatchesCount() {
        if (patchesBuilder_ == null) {
          return patches_.size();
        } else {
          return patchesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .org.alfresco.contentstore.protobuf.PatchDocument.Patch patches = 4;</code>
       */
      public org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.Patch getPatches(int index) {
        if (patchesBuilder_ == null) {
          return patches_.get(index);
        } else {
          return patchesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .org.alfresco.contentstore.protobuf.PatchDocument.Patch patches = 4;</code>
       */
      public Builder setPatches(
          int index, org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.Patch value) {
        if (patchesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePatchesIsMutable();
          patches_.set(index, value);
          onChanged();
        } else {
          patchesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.alfresco.contentstore.protobuf.PatchDocument.Patch patches = 4;</code>
       */
      public Builder setPatches(
          int index, org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.Patch.Builder builderForValue) {
        if (patchesBuilder_ == null) {
          ensurePatchesIsMutable();
          patches_.set(index, builderForValue.build());
          onChanged();
        } else {
          patchesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.alfresco.contentstore.protobuf.PatchDocument.Patch patches = 4;</code>
       */
      public Builder addPatches(org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.Patch value) {
        if (patchesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePatchesIsMutable();
          patches_.add(value);
          onChanged();
        } else {
          patchesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .org.alfresco.contentstore.protobuf.PatchDocument.Patch patches = 4;</code>
       */
      public Builder addPatches(
          int index, org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.Patch value) {
        if (patchesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePatchesIsMutable();
          patches_.add(index, value);
          onChanged();
        } else {
          patchesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .org.alfresco.contentstore.protobuf.PatchDocument.Patch patches = 4;</code>
       */
      public Builder addPatches(
          org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.Patch.Builder builderForValue) {
        if (patchesBuilder_ == null) {
          ensurePatchesIsMutable();
          patches_.add(builderForValue.build());
          onChanged();
        } else {
          patchesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.alfresco.contentstore.protobuf.PatchDocument.Patch patches = 4;</code>
       */
      public Builder addPatches(
          int index, org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.Patch.Builder builderForValue) {
        if (patchesBuilder_ == null) {
          ensurePatchesIsMutable();
          patches_.add(index, builderForValue.build());
          onChanged();
        } else {
          patchesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .org.alfresco.contentstore.protobuf.PatchDocument.Patch patches = 4;</code>
       */
      public Builder addAllPatches(
          java.lang.Iterable<? extends org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.Patch> values) {
        if (patchesBuilder_ == null) {
          ensurePatchesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, patches_);
          onChanged();
        } else {
          patchesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .org.alfresco.contentstore.protobuf.PatchDocument.Patch patches = 4;</code>
       */
      public Builder clearPatches() {
        if (patchesBuilder_ == null) {
          patches_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          patchesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .org.alfresco.contentstore.protobuf.PatchDocument.Patch patches = 4;</code>
       */
      public Builder removePatches(int index) {
        if (patchesBuilder_ == null) {
          ensurePatchesIsMutable();
          patches_.remove(index);
          onChanged();
        } else {
          patchesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .org.alfresco.contentstore.protobuf.PatchDocument.Patch patches = 4;</code>
       */
      public org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.Patch.Builder getPatchesBuilder(
          int index) {
        return getPatchesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .org.alfresco.contentstore.protobuf.PatchDocument.Patch patches = 4;</code>
       */
      public org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.PatchOrBuilder getPatchesOrBuilder(
          int index) {
        if (patchesBuilder_ == null) {
          return patches_.get(index);  } else {
          return patchesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .org.alfresco.contentstore.protobuf.PatchDocument.Patch patches = 4;</code>
       */
      public java.util.List<? extends org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.PatchOrBuilder> 
           getPatchesOrBuilderList() {
        if (patchesBuilder_ != null) {
          return patchesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(patches_);
        }
      }
      /**
       * <code>repeated .org.alfresco.contentstore.protobuf.PatchDocument.Patch patches = 4;</code>
       */
      public org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.Patch.Builder addPatchesBuilder() {
        return getPatchesFieldBuilder().addBuilder(
            org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.Patch.getDefaultInstance());
      }
      /**
       * <code>repeated .org.alfresco.contentstore.protobuf.PatchDocument.Patch patches = 4;</code>
       */
      public org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.Patch.Builder addPatchesBuilder(
          int index) {
        return getPatchesFieldBuilder().addBuilder(
            index, org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.Patch.getDefaultInstance());
      }
      /**
       * <code>repeated .org.alfresco.contentstore.protobuf.PatchDocument.Patch patches = 4;</code>
       */
      public java.util.List<org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.Patch.Builder> 
           getPatchesBuilderList() {
        return getPatchesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.Patch, org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.Patch.Builder, org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.PatchOrBuilder> 
          getPatchesFieldBuilder() {
        if (patchesBuilder_ == null) {
          patchesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.Patch, org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.Patch.Builder, org.alfresco.contentstore.protobuf.PatchDocumentProtos.PatchDocument.PatchOrBuilder>(
                  patches_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          patches_ = null;
        }
        return patchesBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:org.alfresco.contentstore.protobuf.PatchDocument)
    }

    static {
      defaultInstance = new PatchDocument(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:org.alfresco.contentstore.protobuf.PatchDocument)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_alfresco_contentstore_protobuf_PatchDocument_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_alfresco_contentstore_protobuf_PatchDocument_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_org_alfresco_contentstore_protobuf_PatchDocument_Patch_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_org_alfresco_contentstore_protobuf_PatchDocument_Patch_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\013patch.proto\022\"org.alfresco.contentstore" +
      ".protobuf\"\327\001\n\rPatchDocument\022\022\n\nblock_siz" +
      "e\030\001 \002(\005\022\017\n\007node_id\030\002 \002(\t\022\026\n\016matched_bloc" +
      "ks\030\003 \003(\005\022H\n\007patches\030\004 \003(\01327.org.alfresco" +
      ".contentstore.protobuf.PatchDocument.Pat" +
      "ch\032?\n\005Patch\022\030\n\020last_match_index\030\001 \002(\005\022\014\n" +
      "\004size\030\002 \002(\005\022\016\n\006buffer\030\003 \002(\014B9\n\"org.alfre" +
      "sco.contentstore.protobufB\023PatchDocument" +
      "Protos"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_org_alfresco_contentstore_protobuf_PatchDocument_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_org_alfresco_contentstore_protobuf_PatchDocument_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_org_alfresco_contentstore_protobuf_PatchDocument_descriptor,
        new java.lang.String[] { "BlockSize", "NodeId", "MatchedBlocks", "Patches", });
    internal_static_org_alfresco_contentstore_protobuf_PatchDocument_Patch_descriptor =
      internal_static_org_alfresco_contentstore_protobuf_PatchDocument_descriptor.getNestedTypes().get(0);
    internal_static_org_alfresco_contentstore_protobuf_PatchDocument_Patch_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_org_alfresco_contentstore_protobuf_PatchDocument_Patch_descriptor,
        new java.lang.String[] { "LastMatchIndex", "Size", "Buffer", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
